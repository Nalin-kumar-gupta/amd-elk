version: '3'
services:
  elasticsearch:
    image: elasticsearch:7.9.1
    platform: linux/amd64
    container_name: amd_elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - test_data:/usr/share/elasticsearch/data/
      - ./elk-config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
    networks:
      - elk

  logstash:
    image: logstash:7.9.1
    platform: linux/amd64
    container_name: amd_logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./elk-config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elk-config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ls_data:/usr/share/logstash/data

    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.9.1
    platform: linux/amd64
    container_name: amd_kibana
    ports:
      - "5601:5601"
    volumes:
      - ./elk-config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - kb_data:/usr/share/kibana/data
    networks:
      - elk
    depends_on:
      - elasticsearch

  web:
    build:
      context: .
      dockerfile: ./django-config/Dockerfile
    image: amd_django
    container_name: amd_django
    # command: ["./wait-for-it.sh", "amd_elasticsearch:9200", "--", "/start.sh"]
    command: /start.sh
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - ./.env/.local/.django
    networks:
      - elk
    depends_on:
      - redis
      - elasticsearch

  redis:
    image: redis:7-alpine
    container_name: amd_redis
    networks:
      - elk

  celery_worker:
    build:
      context: .
      dockerfile: ./django-config/Dockerfile
    image: amd_celery_worker
    container_name: amd_celery_worker
    command: /start-celeryworker.sh
    volumes:
      - .:/app
    env_file:
      - ./.env/.local/.celery
    networks:
      - elk
    depends_on:
      - redis
      - elasticsearch

  celery_beat:
    build:
      context: .
      dockerfile: ./django-config/Dockerfile
    image: amd_celery_beat
    container_name: amd_celery_beat
    command: /start-celerybeat.sh
    volumes:
      - .:/app
    env_file:
      - ./.env/.local/.beat
    networks:
      - elk
    depends_on:
      - redis
      - elasticsearch

  flower:
    build:
      context: .
      dockerfile: ./django-config/Dockerfile
    image: amd_celery_flower
    container_name: amd_flower
    command: /start-flower.sh
    volumes:
      - .:/app
    env_file:
      - ./.env/.local/.flower
    ports:
      - 5557:5555
    networks:
      - elk
    depends_on:
      - redis
      - elasticsearch


networks:
  elk:
    driver: bridge

volumes:
  test_data:
  ls_data:
  kb_data: